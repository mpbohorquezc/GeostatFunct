{
  "hash": "e5ea93476060c334eb4005af6bec20ad",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cokriging\"\n---\n\n\n\n\nEl cokriging es una extensión del kriging que permite predecir una variable en una ubicación no muestreada utilizando no solo datos de esa misma variable, sino también información de otras variables relacionadas o covariables. Este método aprovecha la correlación espacial entre varias variables para mejorar la precisión de las predicciones.\n\nSupongamos que queremos hacer la predicción tomando en cuenta $p$ variables de forma simultánea. Considerando $Z(s_i) = (Z_1(s_i),Z_2(s_i),\\cdots,Z_p(s_i))'$ , el predictor para $Z_l(s_0), 1\\leq l\\leq p$ basado en p, basado en las $p$ variables tiene la forma\n\n$$\nZ^*_l(s_0) = \\sum_{i=1}^n \\sum_{q=1}^p \\lambda_{qi}Z_q(s_i)\n$$\n\nEl mejor predictor lineal insesgado de una variable en la ubicación $s_0$ está dado por la minimización de\n\n$$\nmax_{1\\leq l \\leq n}\\{Var[Z_l(s_0)-Z^*_l(s_0)]\\}\n$$\n\nPor eficiencia computacional, puede decidirse minimizar\n\n$$\n\\sum_{i=1}^nVar[Z_l(s_0)-Z^*_l(s_0)]\n$$\n\nEn el paquete SpatFD se realiza cokriging sobre los scores elegidos para todas las variables funcionales involucradas. Las predicciones de scores se utilizan para construir el predictor funcional del cokriging.\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(COKMexico)\n# Definimos nuestro objeto SpatFD\nSFD_PM10_NO2 <- SpatFD(Mex_PM10, coords = coord_PM10, basis = \"Fourier\", \nnbasis = 21, lambda = 0.000001, nharm = 2)\n# Agregamos las observaciones de NO2 al objeto que creamos antes por medio del argumento add\nSFD_PM10_NO2 <- SpatFD(NO2, coords = coord_NO2, basis = \"Fourier\", \nnbasis = 27, lambda = 0.000001, nharm = 2,\n                      add = SFD_PM10_NO2)\n# Definimos los modelos de varianza de cada una de las variables\nmodel1 <- gstat::vgm(647677.1,\"Gau\",23317.05)\nmodel1 <- gstat::vgm(127633,\"Wav\",9408.63, add.to = model1)\n\n# Especificamos la ubicación no muestreada\nnewcoords <- data.frame(x = 509926, y = 2179149)\n```\n:::\n\n\n\n\nLa función COKS_scores_lambdas nos permite hacer el cokriging funcional\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncokrig = COKS_scores_lambdas(SFD_PM10_NO2, newcoords, model1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUsing fill.all = TRUE by default\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUsing method = 'lambda' by default\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](cokriging_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear Model of Coregionalization found. Good.\n[using ordinary cokriging]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#cokrig$modelfit\n```\n:::\n",
    "supporting": [
      "cokriging_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}