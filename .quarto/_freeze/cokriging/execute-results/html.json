{
  "hash": "e1d418fb55f6aefedfa2428f06b4faee",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cokriging\"\n---\n\n\nEl cokriging es una extensión del kriging que permite predecir una variable en una ubicación no muestreada utilizando no solo datos de esa misma variable, sino también información de otras variables relacionadas o covariables. Este método aprovecha la correlación espacial entre varias variables para mejorar la precisión de las predicciones.\n\nSupongamos que queremos hacer la predicción tomando en cuenta $p$ variables de forma simultánea. Considerando $Z(s_i) = (Z_1(s_i),Z_2(s_i),\\cdots,Z_p(s_i))'$ , el predictor para $Z_l(s_0), 1\\leq l\\leq p$ basado en p, basado en las $p$ variables tiene la forma\n\n$$\nZ^*_l(s_0) = \\sum_{i=1}^n \\sum_{q=1}^p \\lambda_{qi}Z_q(s_i)\n$$\n\nEl mejor predictor lineal insesgado de una variable en la ubicación $s_0$ está dado por la minimización de\n\n$$\nmax_{1\\leq l \\leq n}\\{Var[Z_l(s_0)-Z^*_l(s_0)]\\}\n$$\n\nPor eficiencia computacional, puede decidirse minimizar\n\n$$\n\\sum_{i=1}^nVar[Z_l(s_0)-Z^*_l(s_0)]\n$$\n\nEn el paquete SpatFD se realiza cokriging sobre los scores elegidos para todas las variables funcionales involucradas. Las predicciones de scores se utilizan para construir el predictor funcional del cokriging.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(COKMexico)\n# Definimos nuestro objeto SpatFD\nSFD_PM10_NO2 <- SpatFD(Mex_PM10, coords = coord_PM10, basis = \"Fourier\", \nnbasis = 21, lambda = 0.000001, nharm = 2)\n# Agregamos las observaciones de NO2 al objeto que creamos antes por medio del argumento add\nSFD_PM10_NO2 <- SpatFD(NO2, coords = coord_NO2, basis = \"Fourier\", \nnbasis = 27, lambda = 0.000001, nharm = 2,\n                      add = SFD_PM10_NO2)\n# Definimos los modelos de varianza de cada una de las variables\nmodel1 <- gstat::vgm(647677.1,\"Gau\",23317.05)\nmodel1 <- gstat::vgm(127633,\"Wav\",9408.63, add.to = model1)\n\n# Especificamos la ubicación no muestreada\nnewcoords <- data.frame(x = 509926, y = 2179149)\n```\n:::\n\n\nLa función COKS_scores_lambdas nos permite hacer el cokriging funcional\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncokrig = COKS_scores_lambdas(SFD_PM10_NO2, newcoords, model1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUsing fill.all = TRUE by default\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUsing method = 'lambda' by default\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](cokriging_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear Model of Coregionalization found. Good.\n[using ordinary cokriging]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncokrig$modelfit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ndata:\nPC1.1 : formula = puntajes[[1]][[1]]`~`1 ; data dim = 13 x 2\nPC2.1 : formula = puntajes[[1]][[2]]`~`1 ; data dim = 13 x 2\nPC1.2 : formula = puntajes[[2]][[1]]`~`1 ; data dim = 18 x 2\nPC2.2 : formula = puntajes[[2]][[2]]`~`1 ; data dim = 18 x 2\nvariograms:\n               model      psill    range\nPC1.1[1]         Gau 356886.232 23317.05\nPC1.1[2]         Wav 251618.187  9408.63\nPC2.1[1]         Gau 157275.294 23317.05\nPC2.1[2]         Wav  66770.748  9408.63\nPC1.2[1]         Gau 509628.594 23317.05\nPC1.2[2]         Wav  86045.557  9408.63\nPC2.2[1]         Gau   9178.223 23317.05\nPC2.2[2]         Wav  77729.767  9408.63\nPC1.1.PC2.1[1]   Gau  96771.742 23317.05\nPC1.1.PC2.1[2]   Wav -11290.879  9408.63\nPC1.1.PC1.2[1]   Gau 358697.498 23317.05\nPC1.1.PC1.2[2]   Wav  84592.302  9408.63\nPC2.1.PC1.2[1]   Gau -36478.239 23317.05\nPC2.1.PC1.2[2]   Wav  57029.144  9408.63\nPC1.1.PC2.2[1]   Gau  11668.546 23317.05\nPC1.1.PC2.2[2]   Wav 137897.759  9408.63\nPC2.1.PC2.2[1]   Gau  -1677.278 23317.05\nPC2.1.PC2.2[2]   Wav -12680.551  9408.63\nPC1.2.PC2.2[1]   Gau  16583.870 23317.05\nPC1.2.PC2.2[2]   Wav  40857.282  9408.63\n```\n\n\n:::\n:::\n",
    "supporting": [
      "cokriging_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}